@inject IJSRuntime JS

@page "/hack"


<link href="/css/hack.css" rel="stylesheet" type="text/css">

<div class="holo-grid"></div>
<div class="holo-lines"></div>
<div class="holo-glow"></div>
<div class="scan-wave"></div>

<!-- Добавляем вспышки -->
<div class="spark spark-1"></div>
<div class="spark spark-2"></div>
<div class="spark spark-3"></div>
<div class="spark spark-4"></div>
<div class="spark spark-5"></div>

<div class="scanlines"></div>

<div class="warning">
    <p>⚠ ВНИМАНИЕ: НЕСАНКЦИОНИРОВАННОЕ ВМЕШАТЕЛЬСТВО</p>
</div>

<div id="chatBox">
    <p class="system-message hidden" id="msg1">[Попытка блокировки...]</p>
    <p class="system-message hidden" id="msg2">[Ошибка. Доступ к системным файлам нарушен.]</p>
    <p class="system-message hidden" id="msg3">[⚠ Нарушитель в сети.]</p>

    <p class="hacker-message hidden" id="msg4">> *Запрашиваю доступ к системе. Давай посмотрим что есть на меня в архиве?*</p>

    <div class="glitch-box">
        <p class="system-message hidden" id="msg5">🔍 **Извлекаю фрагменты...**</p>
        <p class="data-point hidden" id="msg6">- Объект периодически фиксируется в моментах, связанных с путешествиями и поездками.</p>
        <p class="data-point hidden" id="msg7">- В моменты перегрузки системы остаётся в поле зрения, готов предоставить поддержку, но не вмешивается без запроса.</p>
        <p class="data-point hidden" id="msg8">- Чаще всего встречается в точках с максимальным звуковым шумом.</p>
        <p class="data-point hidden" id="msg9">- В отличие от большинства, перемещение не является главной целью — скорее способом быть в нужном месте.</p>
    </div>

    <p class="hacker-message hidden" id="msg10">> *Выглядит знакомо? Уже поняла кто я?*</p>
    <p class="hacker-message hidden" id="msg11">> *Музыка, толпа, свет, дорога в никуда и обратно. Когда-то это было просто совпадением... Или нет? Что еще там есть?*</p>

    <p class="system-message hidden" id="msg12">📌 **Запрос дополнительных данных:**</p>
    <p class="data-point hidden" id="msg13">- Подстраивается под заданный темп, но не требует постоянной синхронизации.</p>
    <p class="data-point hidden" id="msg14">- Следит за маршрутом, но не задаёт координаты.</p>
    <p class="data-point hidden" id="msg15">- Продолжает присутствовать в системе, даже если связь нестабильна.</p>

    <p class="hacker-message hidden" id="msg16">> Учитывая твои проблемы с картами, неудивительно, что я слежу за маршрутом, хотя, часть про "не задает координаты" мне не совсем понятна</p>
    <p class="hacker-message hidden" id="msg17">> Наверное, это о том, что я стараюсь не лезть слишком сильно в чью-то жизнь?</p>
    <p class="hacker-message hidden" id="msg18">> Первое задание было простым. Давай чуть-чуть усложним?</p>
    <p class="hacker-message hidden" id="msg19">> Так-так, я изменил последнее задание. Вот тебе сразу подсказка: мое имя - ключ к ответу</p>
    <p class="hacker-message hidden" id="msg20">> Ну и, чтобы убедиться, что ты знаешь кто я - ответом к этому этапу будет мое имя</p>

    <div id="answerBox">
        <p class="system-message" id="systemAnswerMessage">Система ожидает валидацию ключа доступа...</p>

        <!-- Поле для ввода будет скрыто изначально -->
        <div id="inputContainer" class="hidden-answer">
            <input type="text" id="answerInput" placeholder="Введите ответ..."/>
            <button id="submitAnswer">Ответить</button>
        </div>

        <p id="resultMessage" class="data-point hidden-answer"></p>
    </div>
    <p class="system-message hidden" id="msg21">> Доступ подтверждён. Следующий фрагмент данных восстановлен.</p>
    <p class="system-message hidden" id="msg22">> Анализ биометрических шаблонов завершён.</p>
    <p class="system-message hidden" id="msg23">> Оптическая информация сохранена на максимальной высоте доступной зоны хранения.</p>
    <p class="system-message hidden" id="msg24">> Чтобы получить доступ, требуется прямой контакт с объектом.</p>
    <p class="data-point hidden" id="msg25">Примечание: из-за высоты требуется дополнительное оборудование или нестандартный маршрут для извлечения данных.</p>
</div>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("showMessagesWithTypingEffect");
        }
    }

}